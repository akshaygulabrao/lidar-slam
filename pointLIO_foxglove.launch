<launch>
  <arg name="port"                              default="8765" />
  <arg name="address"                           default="0.0.0.0" />
  <arg name="tls"                               default="false" />
  <arg name="certfile"                          default="" />
  <arg name="keyfile"                           default="" />
  <arg name="topic_whitelist"                   default="['.*']" />
  <arg name="param_whitelist"                   default="['.*']" />
  <arg name="service_whitelist"                 default="['.*']" />
  <arg name="client_topic_whitelist"            default="['.*']" />
  <arg name="max_update_ms"                     default="5000" />
  <arg name="send_buffer_limit"                 default="100000000" />
  <arg name="nodelet_manager"                   default="foxglove_nodelet_manager" />
  <arg name="num_threads"                       default="0" />
  <arg name="capabilities"                      default="[clientPublish,parameters,parametersSubscribe,services,connectionGraph,assets]" />
  <arg name="asset_uri_allowlist"               default="['^package://(?:\w+/)*\w+\.(?:dae|fbx|glb|gltf|jpeg|jpg|mtl|obj|png|stl|tif|tiff|urdf|webp|xacro)$']" />
  <arg name="service_type_retrieval_timeout_ms" default="250" />

  <node pkg="nodelet" type="nodelet" name="foxglove_nodelet_manager" args="manager"
        if="$(eval nodelet_manager == 'foxglove_nodelet_manager')">
    <param name="num_worker_threads"  type="int"        value="$(arg num_threads)" />
  </node>

  <node pkg="nodelet" type="nodelet" name="foxglove_bridge"
        args="load foxglove_bridge/foxglove_bridge_nodelet $(arg nodelet_manager)">
    <param name="port"                              type="int"        value="$(arg port)" />
    <param name="address"                           type="string"     value="$(arg address)" />
    <param name="tls"                               type="bool"       value="$(arg tls)" />
    <param name="certfile"                          type="string"     value="$(arg certfile)" />
    <param name="keyfile"                           type="string"     value="$(arg keyfile)" />
    <param name="max_update_ms"                     type="int"        value="$(arg max_update_ms)" />
    <param name="send_buffer_limit"                 type="int"        value="$(arg send_buffer_limit)" />
    <param name="service_type_retrieval_timeout_ms" type="int"        value="$(arg service_type_retrieval_timeout_ms)" />

    <rosparam param="topic_whitelist"         subst_value="True">$(arg topic_whitelist)</rosparam>
    <rosparam param="param_whitelist"         subst_value="True">$(arg param_whitelist)</rosparam>
    <rosparam param="service_whitelist"       subst_value="True">$(arg service_whitelist)</rosparam>
    <rosparam param="client_topic_whitelist"  subst_value="True">$(arg client_topic_whitelist)</rosparam>
    <rosparam param="capabilities"            subst_value="True">$(arg capabilities)</rosparam>
    <rosparam param="asset_uri_allowlist"     subst_value="True">$(arg asset_uri_allowlist)</rosparam>
  </node>
  <node pkg="rosbag" type="play" name="bag_player" 
      args="-r 2 /2021-07-01-10-37-38-quad-easy.bag --topics \
        /os_cloud_node/points \
        /os_cloud_node/imu \
        /alphasense_driver_ros/cam0/compressed"/>

  <arg name="rviz" default="false" />

  <node pkg="point_lio" type="pointlio_mapping" name="laserMapping" output="screen">
    <rosparam command="load" file="$(find point_lio)/config/ouster128-newercollege.yaml" />
    <param name="use_imu_as_input" type="bool" value="1"/> <!--change to 1 to use IMU as input of Point-LIO-->
    <param name="prop_at_freq_of_imu" type="bool" value="1"/>
    <param name="check_satu" type="bool" value="1"/>
    <param name="init_map_size" type="int" value="10"/>
    <param name="point_filter_num" type="int" value="4"/> <!--4, 3--> 
    <param name="space_down_sample" type="bool" value="1" />  
    <param name="filter_size_surf" type="double" value="0.5" /> <!--0.5, 0.3, 0.2, 0.15, 0.1--> 
    <param name="filter_size_map" type="double" value="0.5" /> <!--0.5, 0.3, 0.15, 0.1-->
    <param name="ivox_nearby_type" type="int" value="6" /> <!--0.5, 0.3, 0.15, 0.1-->
    <param name="runtime_pos_log_enable" type="bool" value="1" /> <!--1-->
  </node>

  <node name="topic_recorder" pkg="rosbag" type="record" 
        args="-p /tf --output-name=/bags/recorded_data"/>
</launch>